// All extension points for Flakka

syntax = "proto3";

package flakka.v1alpha1;

import "flakka/build/spec/v1alpha1/spec.proto";
//import "kalix/acl.proto";
import "flakka/v1alpha1/component.proto";
import "google/protobuf/descriptor.proto";
//import "flakka/v1alpha1/eventing.proto";
//import "kalix/jwt.proto";
//import "kalix/keygenerator.proto";
//import "kalix/triggers.proto";
//import "kalix/views.proto";
//import "flakka/v1alpha1/views.proto";

//message EventFileOptions {
//  // Event sourced entity configuration.
//  EventSourcedEntity event_sourced_entity = 1;
//  //  // Value entity configuration.
//  //  ValueEntity value_entity = 2;
//  //  // Replicated entity configuration.
//  //  ReplicatedEntity replicated_entity = 3;
//  // Event sourced entity configuration.
//  EntityMutation mutation = 4;
//  EntityState state = 5;
//}


message FieldOptions {
  // Extension for specifying which field in a message is to be considered an
  // entity key, for the purposes of associating gRPC calls with entities and
  // sharding.
  bool entity_key = 1;
}

message FileOptions {
  // Event sourced entity configuration.
  EventSourcedEntity event_sourced_entity = 1;
  //  // Value entity configuration.
  //  ValueEntity value_entity = 2;
  //  // Replicated entity configuration.
  //  ReplicatedEntity replicated_entity = 3;
  // Event sourced entity configuration.
  EntityMutation mutation = 4;
  EntityState state = 5;
}

//message MethodOptions {
//  // Eventing configuration for a gRPC method.
//  Eventing eventing = 1;
//  // Views configuration for a gRPC method.
//  View view = 2;
//  // JWT validation and signing configuration.
//  JwtMethodOptions jwt = 3;
//  // Entity options
//  KeyGeneratorMethodOptions entity = 4;
//  // ACL options
//  Acl acl = 5;
//  // Workflow options
//  KeyGeneratorMethodOptions workflow = 6;
//
//  TriggerOptions trigger = 7;
//}

//message ServiceOptions {
//  enum ServiceType {
//    SERVICE_TYPE_UNSPECIFIED = 0; // Will be ignored for processing - same as omitting the service type
//    SERVICE_TYPE_ACTION = 1;
//    SERVICE_TYPE_ENTITY = 2;
//    SERVICE_TYPE_VIEW = 3;
//  }
//  // This field is mandatory
//  ServiceType type = 1;
//  // A path to a component - required for SERVICE_TYPE_ENTITY types
//  string component = 2;
//  // ACL options
//  Acl acl = 3;
//  ServiceEventing eventing = 4;
//  JwtServiceOptions jwt = 5;
//}

//message CodegenOptions {
//  oneof codegen {
//    EventSourcedEntityDef event_sourced_entity = 1;
//    ValueEntityDef value_entity = 2;
//    ReplicatedEntityDef replicated_entity = 3;
//    ActionDef action = 4;
//    ViewDef view = 5;
//    WorkflowDef workflow = 6;
//  }
//}

extend google.protobuf.FieldOptions {
  FieldOptions field = 1080;
}
//
//extend google.protobuf.FileOptions {
//  FileOptions file = 1080;
//}

//extend google.protobuf.MethodOptions {
//  MethodOptions method = 1080;
//}

//extend google.protobuf.MessageOptions {
//  MessageOptions message = 1080;
//}

//extend google.protobuf.ServiceOptions {
//  ServiceOptions service = 1080;
//  CodegenOptions codegen = 1081;
//}
